<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.1.RELEASE</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.commscope.elasticsearchservice</groupId>
	<artifactId>elkclient-microservice</artifactId>
	<name>ElasticSearch_microservice</name>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<repositories>
		<repository>
			<id>onap-releases</id>
			<name>onap-releases</name>
			<url>https://nexus.onap.org/content/repositories/releases/</url>
		</repository>
	</repositories>
	<properties>
		<docker.image.name>elasticsearch-client</docker.image.name>
		<dms.version>1.0.0</dms.version>
		<build.version>${VERSION}</build.version>
		<org.mockito.version>1.8.4</org.mockito.version>
		<maven-clean-plugin.version>2.4.1</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
		<maven-assembly-plugin.version>2.2</maven-assembly-plugin.version>
		<maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
		<log4j.extras>1.2.17</log4j.extras>
		<docker-maven-plugin>0.30.0</docker-maven-plugin>
		<sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>

		<spotless-maven-plugin.version>1.18.0</spotless-maven-plugin.version>
		<formatter-maven-plugin.version>2.8.1</formatter-maven-plugin.version>
		<build.version>${VERSION}</build.version>
	</properties>
	<dependencies>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>8.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>transport</artifactId>
			<version>7.14.0</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>		
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>${formatter-maven-plugin.version}</version>
				<configuration>
					<configFile>${project.parent.basedir}/eclipse-formatter.xml</configFile>
				</configuration>
				<!-- https://code.revelc.net/formatter-maven-plugin/ use mvn formatter:format 
					spotless:apply process-sources -->
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless-maven-plugin.version}</version>
				<configuration>
					<java>
						<removeUnusedImports />
						<importOrder>
							<order>com,java,javax,org</order>
						</importOrder>
					</java>
				</configuration>
				<!-- https://github.com/diffplug/spotless/tree/master/plugin-maven use 
					mvn spotless:apply to rewrite source files use mvn spotless:check to validate 
					source files -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<skipTests>false</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.basedir}/../package/elk-ms/elk-ms_version.txt</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin}</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>generate-policy-agent-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
							<goal>save</goal>
						</goals>
						<configuration>
							<pullRegistry>${env.CONTAINER_PULL_REGISTRY}</pullRegistry>
							<images>
								<image>
									<name>${docker.image.name}:${build.version}</name>
									<build>
										<cleanup>try</cleanup>
										<contextDir>${basedir}</contextDir>
										<dockerFile>Dockerfile</dockerFile>
										<args>
											<JAR>${project.build.finalName}.jar</JAR>
										</args>
										<tags>
											<tag>${project.version}</tag>
										</tags>
									</build>
								</image>
							</images>
						</configuration>
					</execution>
					<execution>
						<id>push-policy-agent-image</id>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<pullRegistry>${env.CONTAINER_PULL_REGISTRY}</pullRegistry>
							<pushRegistry>${env.CONTAINER_PUSH_REGISTRY}</pushRegistry>
							<images>
								<image>
									<name>${docker.image.name}:${project.version}</name>
									<build>
										<contextDir>${basedir}</contextDir>
										<dockerFile>Dockerfile</dockerFile>
										<args>
											<JAR>${project.build.finalName}.jar</JAR>
										</args>
										<tags>
											<tag>${VERSION}</tag>
										</tags>
									</build>
								</image>
							</images>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- support sonar in multi-module project -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>
		</plugins>
	</build>


</project>